"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[296],{7705:function(e,t,a){a.d(t,{Ag:function(){return s},Ru:function(){return i},dz:function(){return c}});var r=a(89839),n=a(24789);function s(){var e=(0,r.Z)((0,n.dQ)("colors",["cat.maroon","cat.base"]),2),t=e[0],a=e[1];return{fontSize:"14",padding:"8px",borderRadius:(0,r.Z)((0,n.dQ)("radii",["md"]),1)[0],color:a,background:t,overflowX:"auto"}}function c(){return{fontSize:"14",fontFamily:(0,r.Z)((0,n.dQ)("fonts",["mono"]),1)[0]}}function i(){var e,t=(0,r.Z)((0,n.dQ)("colors",["cat.text","cat.mantle","cat.overlay"]),3),a=t[0];return{plain:{color:a,backgroundColor:t[1]},styles:[{types:["variable"],style:{color:"rgb(242, 205, 205)"}},{types:["function"],style:{color:"rgb(137, 180, 250)",fontStyle:"italic"}},{types:["builtin"],style:{color:"rgb(205, 214, 244)"}},{types:["number","constant","changed","namespace","class-name"],style:{color:"rgb(250, 179, 135)"}},{types:["keyword","selector"],style:{color:"rgb(243, 139, 168)"}},{types:["punctuation"],style:{color:"rgb(127, 132, 156)"}},{types:["operator","symbol"],style:{color:"rgb(137, 220, 235)"}},{types:["inserted"],style:{color:"rgb(166, 227, 161)"}},{types:["deleted"],style:{color:"rgb(148, 226, 213)"}},{types:["string"],style:{color:"rgb(166, 227, 161)",fontStyle:"italic"}},{types:["char"],style:{color:"rgb(249, 226, 175)"}},{types:["tag"],style:{color:"rgb(203, 166, 247)"}},{types:["attr-name"],style:{color:"rgb(137, 180, 250)"}},{types:["comment"],style:{color:t[2],fontStyle:"italic"}},]}}a(70079)},69613:function(e,t,a){a.d(t,{e:function(){return l}});var r=a(35250),n=a(45252),s=a(70079),c=a(86001),i=a(45480);function o(e){var t=e.content,a=(0,s.useMemo)(function(){return t.map(function(e){return e.text}).join("")},[t]);return(0,r.jsx)(i.U,{children:a})}var l={Summary:function(e){var t=e.hook,a=(0,s.useMemo)(function(){var e,a,r;return null!==(r=null===(e=t.signatures[0])||void 0===e?void 0:null===(a=e.comment)||void 0===a?void 0:a.summary)&&void 0!==r?r:[]},[t]);return(0,r.jsx)(o,{content:a})},Remarks:function(e){var t=e.hook,a=(0,s.useMemo)(function(){var e,a,r=null===(e=t.signatures[0])||void 0===e?void 0:null===(a=e.comment)||void 0===a?void 0:a.blockTags;if(r)return r.find(function(e){return"@remarks"===e.tag})},[t]);return a?(0,r.jsx)(o,{content:a.content}):(0,r.jsx)(r.Fragment,{})},Example:function(e){var t=e.hook,a=(0,s.useMemo)(function(){var e,a,r=null===(e=t.signatures[0])||void 0===e?void 0:null===(a=e.comment)||void 0===a?void 0:a.blockTags;return r?r.filter(function(e){return"@example"===e.tag}):[]},[t]);return(0,r.jsx)(r.Fragment,{children:a.map(function(e,t){return(0,r.jsx)(o,{content:e.content},t)})})},Deprecation:function(e){var t=e.hook,a=(0,s.useMemo)(function(){var e=(0,c.Q)(t);if(e)return e.content.map(function(e){return"inline-tag"===e.kind?"[".concat(e.text,"](/hooks/").concat(e.text,")"):e.text}).join("")},[t]);return a?(0,r.jsxs)(n.bZ,{mt:8,maxW:"30rem",mx:"auto",status:"warning",variant:"subtle",flexDir:"column",background:"cat.peach",rounded:"md",boxShadow:"xl",color:"cat.base",children:[(0,r.jsx)(n.zM,{boxSize:10}),(0,r.jsx)(n.Cd,{mt:4,mb:1,fontSize:"lg",children:"Deprecation Notice"}),(0,r.jsx)(n.X,{children:(0,r.jsx)(i.U,{children:a})})]}):(0,r.jsx)(r.Fragment,{})}}},1372:function(e,t,a){a.d(t,{A:function(){return p}});var r=a(35250),n=a(98533);a(70079);var s=a(92340),c=a.n(s),i=a(93153);function o(e){var t=e.href,a=e.title,s=(0,i.useRouter)().asPath,o="/"===t?"/"===s:s.startsWith(t);return(0,r.jsx)(n.HC,{borderBottom:o?"1px solid":"0px solid",borderColor:"cat.peach",py:"2",children:(0,r.jsx)(c(),{href:t,passHref:!0,children:(0,r.jsx)(n.rU,{transition:"color ease-in 200ms",_hover:{textDecor:"none",color:"cat.peach"},children:a})})})}function l(){return(0,r.jsxs)(n.Ug,{py:"4",px:"8",bg:"cat.crust",w:"full",justifyContent:"space-between",children:[(0,r.jsx)(n.Ug,{alignItems:"center",children:(0,r.jsx)(c(),{href:"/",passHref:!0,children:(0,r.jsx)("a",{children:(0,r.jsx)(n.xv,{as:"h2",fontWeight:"bold",fontSize:"xl",children:"StarkNet React"})})})}),(0,r.jsx)(n.Ug,{children:(0,r.jsxs)(n.aV,{display:"flex",flexDir:"row",gap:"4",children:[(0,r.jsx)(o,{href:"/",title:"Home"}),(0,r.jsx)(o,{href:"/get-started",title:"Get Started"}),(0,r.jsx)(o,{href:"/hooks",title:"Hooks"})]})})]})}function p(e){var t=e.children;return(0,r.jsxs)(n.xu,{h:"100vh",display:"flex",flexDir:"column",children:[(0,r.jsx)(l,{}),(0,r.jsx)(n.xu,{flexGrow:"1",bg:"cat.base",children:t})]})}},45480:function(e,t,a){a.d(t,{U:function(){return f}});var r=a(67001),n=a(61079),s=a(89874),c=a(35250),i=a(70079),o=a(45653),l=a(89839),p=a(42666),d=a(98533),k=a(36519),m=a.n(k),g=a(15777),u=a(7705),h=m()(function(){return Promise.all([a.e(215),a.e(5),a.e(879),a.e(593),a.e(273),a.e(673)]).then(a.bind(a,1125))},{loadableGenerated:{webpack:function(){return[1125]}}});function y(e){var t=e.language,a=e.children,s=(0,l.Z)((0,p.kt)(),2),o=s[0],k=s[1].on;(0,i.useEffect)(k,[k]);var m=(0,u.Ru)(),y=(0,i.useMemo)(function(){var e;return e=a,(Array.isArray(e)?e.join("\n"):e).trim()},[a]);return o&&"tsx"===t?(0,c.jsx)(h,{language:t,code:y,theme:m}):(0,c.jsx)(d.xu,{p:"5",rounded:"md",my:"2",bg:"cat.mantle",children:(0,c.jsx)(g.ZP,(0,n.Z)((0,r.Z)({},g.lG),{code:y,language:t,theme:m,children:function(e){var t=e.className,a=e.style,s=e.tokens,i=e.getLineProps,o=e.getTokenProps;return(0,c.jsx)("pre",{className:t,style:a,children:s.map(function(e,t){return(0,c.jsx)("div",(0,n.Z)((0,r.Z)({},i({line:e,key:t})),{children:e.map(function(e,t){return(0,c.jsx)("span",(0,r.Z)({},o({token:e,key:t})),t)})}),t)})})}}))})}var b={code:function(e){var t,a=e.node,i=e.className,o=(e.inline,e.children),l=(0,s.Z)(e,["node","className","inline","children"]),p=/language-(\w+)/.exec(i||""),d=null==a?void 0:null===(t=a.data)||void 0===t?void 0:t.meta;return p?(0,c.jsx)(y,{language:p[1],wrapLines:!!d,children:o}):(0,c.jsx)("code",(0,n.Z)((0,r.Z)({className:i},l),{children:o}))}};function f(e){var t=e.children;return(0,c.jsx)(o.D,{components:b,children:t})}},86001:function(e,t,a){a.d(t,{Q:function(){return n},X:function(){return s}});var r=JSON.parse('{"pI":[{"id":283,"name":"Connector","kind":128,"kindString":"Class","flags":{"isAbstract":true},"children":[{"id":284,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":9,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L9"}],"signatures":[{"id":285,"name":"new Connector","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":286,"name":"Options","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":287,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":288,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":289,"name":"options","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":9,"character":29,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L9"}],"type":{"type":"reference","id":286,"name":"Options"}}],"groups":[{"title":"Properties","children":[289]}],"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":9,"character":27,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L9"}]}}}],"type":{"type":"reference","id":283,"typeArguments":[{"type":"reference","id":286,"name":"Options"}],"name":"Connector"}}]},{"id":290,"name":"options","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Options to use with connector"}]},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":7,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L7"}],"type":{"type":"reference","id":286,"name":"Options"}},{"id":305,"name":"account","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":22,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L22"}],"signatures":[{"id":306,"name":"account","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":291,"name":"available","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":14,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L14"}],"signatures":[{"id":292,"name":"available","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether connector is available for use"}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":295,"name":"connect","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":18,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L18"}],"signatures":[{"id":296,"name":"connect","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":297,"name":"disconnect","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":19,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L19"}],"signatures":[{"id":298,"name":"disconnect","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":307,"name":"id","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":24,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L24"}],"signatures":[{"id":308,"name":"id","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Unique connector id"}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":299,"name":"initEventListener","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":20,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L20"}],"signatures":[{"id":300,"name":"initEventListener","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":301,"name":"accountChangeCb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":374,"name":"EventHandler"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":309,"name":"name","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":26,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L26"}],"signatures":[{"id":310,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Connector name"}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":293,"name":"ready","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":17,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L17"}],"signatures":[{"id":294,"name":"ready","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether connector is already authorized"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":302,"name":"removeEventListener","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":21,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L21"}],"signatures":[{"id":303,"name":"removeEventListener","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":304,"name":"accountChangeCb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":374,"name":"EventHandler"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[284]},{"title":"Properties","children":[290]},{"title":"Methods","children":[305,291,295,297,307,299,309,293,302]}],"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":5,"character":22,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L5"}],"typeParameters":[{"id":311,"name":"Options","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"extendedBy":[{"type":"reference","id":312,"name":"InjectedConnector"}]},{"id":312,"name":"InjectedConnector","kind":128,"kindString":"Class","flags":{},"children":[{"id":313,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":44,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L44"}],"signatures":[{"id":314,"name":"new InjectedConnector","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":315,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":316,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":317,"name":"options","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":44,"character":29,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L44"}],"type":{"type":"reference","id":344,"name":"InjectedConnectorOptions"}}],"groups":[{"title":"Properties","children":[317]}],"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":44,"character":27,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L44"}]}}}],"type":{"type":"reference","id":312,"name":"InjectedConnector"},"overwrites":{"type":"reference","id":285,"name":"Connector.constructor"}}],"overwrites":{"type":"reference","id":284,"name":"Connector.constructor"}},{"id":318,"name":"_wallet","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":42,"character":10,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L42"}],"type":{"type":"reference","name":"StarknetWindowObject","qualifiedName":"StarknetWindowObject","package":"get-starknet-core"}},{"id":341,"name":"options","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Options to use with connector"}]},"sources":[{"fileName":"packages/core/src/connectors/base.ts","line":7,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/base.ts#L7"}],"type":{"type":"reference","id":344,"name":"InjectedConnectorOptions"},"inheritedFrom":{"type":"reference","id":290,"name":"Connector.options"}},{"id":327,"name":"account","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":94,"character":8,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L94"}],"signatures":[{"id":328,"name":"account","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":306,"name":"Connector.account"}}],"overwrites":{"type":"reference","id":305,"name":"Connector.account"}},{"id":319,"name":"available","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":48,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L48"}],"signatures":[{"id":320,"name":"available","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether connector is available for use"}]},"type":{"type":"intrinsic","name":"boolean"},"overwrites":{"type":"reference","id":292,"name":"Connector.available"}}],"overwrites":{"type":"reference","id":291,"name":"Connector.available"}},{"id":323,"name":"connect","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":60,"character":8,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L60"}],"signatures":[{"id":324,"name":"connect","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":296,"name":"Connector.connect"}}],"overwrites":{"type":"reference","id":295,"name":"Connector.connect"}},{"id":325,"name":"disconnect","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":82,"character":8,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L82"}],"signatures":[{"id":326,"name":"disconnect","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":298,"name":"Connector.disconnect"}}],"overwrites":{"type":"reference","id":297,"name":"Connector.disconnect"}},{"id":339,"name":"ensureWallet","kind":2048,"kindString":"Method","flags":{"isPrivate":true},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":140,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L140"}],"signatures":[{"id":340,"name":"ensureWallet","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":329,"name":"id","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":108,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L108"}],"signatures":[{"id":330,"name":"id","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Unique connector id"}]},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":308,"name":"Connector.id"}}],"overwrites":{"type":"reference","id":307,"name":"Connector.id"}},{"id":333,"name":"initEventListener","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":120,"character":8,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L120"}],"signatures":[{"id":334,"name":"initEventListener","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":335,"name":"accountChangeCb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":374,"name":"EventHandler"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":300,"name":"Connector.initEventListener"}}],"overwrites":{"type":"reference","id":299,"name":"Connector.initEventListener"}},{"id":331,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":112,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L112"}],"signatures":[{"id":332,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Connector name"}]},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":310,"name":"Connector.name"}}],"overwrites":{"type":"reference","id":309,"name":"Connector.name"}},{"id":321,"name":"ready","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":53,"character":8,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L53"}],"signatures":[{"id":322,"name":"ready","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether connector is already authorized"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":294,"name":"Connector.ready"}}],"overwrites":{"type":"reference","id":293,"name":"Connector.ready"}},{"id":336,"name":"removeEventListener","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":130,"character":8,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L130"}],"signatures":[{"id":337,"name":"removeEventListener","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":338,"name":"accountChangeCb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":374,"name":"EventHandler"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":303,"name":"Connector.removeEventListener"}}],"overwrites":{"type":"reference","id":302,"name":"Connector.removeEventListener"}}],"groups":[{"title":"Constructors","children":[313]},{"title":"Properties","children":[318,341]},{"title":"Methods","children":[327,319,323,325,339,329,333,331,321,336]}],"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":41,"character":13,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L41"}],"extendedTypes":[{"type":"reference","id":283,"typeArguments":[{"type":"reference","id":344,"name":"InjectedConnectorOptions"}],"name":"Connector"}]},{"id":174,"name":"Call","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a contract call."}]},"children":[{"id":177,"name":"calldata","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The raw calldata."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":12,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L12"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}},{"id":175,"name":"contractAddress","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The address of the contract."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":8,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L8"}],"type":{"type":"intrinsic","name":"string"}},{"id":176,"name":"entrypoint","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The selector of the function to invoke."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":10,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L10"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[177,175,176]}],"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":6,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L6"}]},{"id":78,"name":"FetchBlockArgs","kind":256,"kindString":"Interface","flags":{},"children":[{"id":79,"name":"blockIdentifier","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Identifier for the block to fetch."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":52,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L52"}],"type":{"type":"reference","name":"BlockNumber","qualifiedName":"BlockNumber","package":"starknet"}}],"groups":[{"title":"Properties","children":[79]}],"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":50,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L50"}]},{"id":346,"name":"IStarknetWindowObject","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Interface implemented by all injected starknet wallets."}]},"children":[{"id":372,"name":"account","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":37,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L37"}],"type":{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}},{"id":347,"name":"enable","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":26,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L26"}],"type":{"type":"reflection","declaration":{"id":348,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":26,"character":10,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L26"}],"signatures":[{"id":349,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":350,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":351,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":352,"name":"showModal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":26,"character":23,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L26"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[352]}],"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":26,"character":21,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L26"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":369,"name":"icon","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":34,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L34"}],"type":{"type":"intrinsic","name":"string"}},{"id":366,"name":"id","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":31,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L31"}],"type":{"type":"intrinsic","name":"string"}},{"id":371,"name":"isConnected","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":36,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L36"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":353,"name":"isPreauthorized","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":27,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L27"}],"type":{"type":"reflection","declaration":{"id":354,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":27,"character":19,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L27"}],"signatures":[{"id":355,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":367,"name":"name","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":32,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L32"}],"type":{"type":"intrinsic","name":"string"}},{"id":361,"name":"off","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":29,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L29"}],"type":{"type":"reflection","declaration":{"id":362,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":29,"character":7,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L29"}],"signatures":[{"id":363,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":364,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":378,"name":"EventType"}},{"id":365,"name":"handleEvent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":374,"name":"EventHandler"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":356,"name":"on","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":28,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L28"}],"type":{"type":"reflection","declaration":{"id":357,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":28,"character":6,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L28"}],"signatures":[{"id":358,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":359,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":378,"name":"EventType"}},{"id":360,"name":"handleEvent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":374,"name":"EventHandler"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":370,"name":"provider","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":35,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L35"}],"type":{"type":"reference","name":"ProviderInterface","qualifiedName":"ProviderInterface","package":"starknet"}},{"id":373,"name":"selectedAddress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":38,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L38"}],"type":{"type":"intrinsic","name":"string"}},{"id":368,"name":"version","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":33,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L33"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[372,347,369,366,371,353,367,361,356,370,373,368]}],"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":25,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L25"}]},{"id":344,"name":"InjectedConnectorOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Injected connector options."}]},"children":[{"id":345,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The wallet id."}]},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":14,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L14"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[345]}],"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":12,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L12"}]},{"id":198,"name":"InvokeArgs","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for the "},{"kind":"code","text":"`invoke`"},{"kind":"text","text":" function."}]},"children":[{"id":199,"name":"args","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The args the contract method is called with."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":15,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L15"}],"type":{"type":"reference","id":202,"name":"T"}},{"id":201,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Metadata associated with the transaction."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":20,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L20"}],"type":{"type":"intrinsic","name":"any"}},{"id":200,"name":"overrides","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Transaction overrides."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":17,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L17"}],"type":{"type":"reference","name":"Overrides","qualifiedName":"Overrides","package":"starknet"}}],"groups":[{"title":"Properties","children":[199,201,200]}],"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":13,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L13"}],"typeParameters":[{"id":202,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}]},{"id":37,"name":"ManagedTransaction","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A transaction managed by the transaction manager."}]},"children":[{"id":38,"name":"hash","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The transaction hash."}]},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":10,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L10"}],"type":{"type":"intrinsic","name":"string"}},{"id":39,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Metadata associated with the transaction."}]},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":12,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L12"}],"type":{"type":"reference","id":40,"name":"M"}}],"groups":[{"title":"Properties","children":[38,39]}],"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":8,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L8"}],"typeParameters":[{"id":40,"name":"M","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the metadata type."}]},"type":{"type":"intrinsic","name":"object"}}]},{"id":74,"name":"StarkNetBlockResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useStarknetBlock`"},{"kind":"text","text":"."}]},"children":[{"id":75,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Block data."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":9,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L9"}],"type":{"type":"reference","name":"GetBlockResponse","qualifiedName":"GetBlockResponse","package":"starknet"}},{"id":77,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error loading block."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":13,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L13"}],"type":{"type":"intrinsic","name":"string"}},{"id":76,"name":"loading","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"True if loading block."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":11,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L11"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[75,77,76]}],"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":7,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L7"}]},{"id":24,"name":"StarknetProviderProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`StarknetProvider`"},{"kind":"text","text":"."}]},"children":[{"id":28,"name":"autoConnect","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Connect the first available connector on page load."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":237,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L237"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":25,"name":"children","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Application."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":231,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L231"}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":27,"name":"connectors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of connectors to use."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":235,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L235"}],"type":{"type":"array","elementType":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}}},{"id":26,"name":"defaultProvider","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default provider, used when the user is not connected."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":233,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L233"}],"type":{"type":"reference","name":"ProviderInterface","qualifiedName":"ProviderInterface","package":"starknet"}},{"id":29,"name":"queryClient","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Low-level react-query client to use."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":239,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L239"}],"type":{"type":"reference","name":"QueryClient","qualifiedName":"QueryClient","package":"@tanstack/query-core"}}],"groups":[{"title":"Properties","children":[28,25,27,26,29]}],"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":229,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L229"}]},{"id":12,"name":"StarknetState","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"State of the StarkNet context."}]},"children":[{"id":13,"name":"account","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Connected account address."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`useAccount`"},{"kind":"text","text":"."}]}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":14,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L14"}],"type":{"type":"intrinsic","name":"string"}},{"id":14,"name":"connect","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":20,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L20"}],"type":{"type":"reflection","declaration":{"id":15,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":20,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L20"}],"signatures":[{"id":16,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Connect the given connector."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`useConnectors`"},{"kind":"text","text":"."}]}]},"parameters":[{"id":17,"name":"connector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":21,"name":"connectors","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"List of registered connectors."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`useConnectors`"},{"kind":"text","text":"."}]}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":31,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L31"}],"type":{"type":"array","elementType":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}}},{"id":18,"name":"disconnect","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":26,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L26"}],"type":{"type":"reflection","declaration":{"id":19,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":26,"character":14,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L26"}],"signatures":[{"id":20,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Disconnect the currently connected connector."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`useConnectors`"},{"kind":"text","text":"."}]}]},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":23,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":35,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L35"}],"type":{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"}},{"id":22,"name":"library","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Current provider."}]},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":33,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L33"}],"type":{"type":"reference","name":"ProviderInterface","qualifiedName":"ProviderInterface","package":"starknet"}}],"groups":[{"title":"Properties","children":[13,14,21,18,23,22]}],"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":8,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L8"}]},{"id":59,"name":"TransactionManagerProviderProps","kind":256,"kindString":"Interface","flags":{},"children":[{"id":60,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":79,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L79"}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}}],"groups":[{"title":"Properties","children":[60]}],"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":78,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L78"}]},{"id":41,"name":"TransactionManagerState","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Transaction manager state."}]},"children":[{"id":44,"name":"addTransaction","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":22,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L22"}],"type":{"type":"reflection","declaration":{"id":45,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":22,"character":18,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L22"}],"signatures":[{"id":46,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Add a transaction to the managed transactions."}]},"parameters":[{"id":47,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":48,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":49,"name":"hash","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":22,"character":41,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L22"}],"type":{"type":"intrinsic","name":"string"}},{"id":50,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":22,"character":55,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L22"}],"type":{"type":"reference","id":57,"name":"M"}}],"groups":[{"title":"Properties","children":[49,50]}],"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":22,"character":39,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L22"}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":43,"name":"hashes","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Hashes of the transactions being managed."}]},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":20,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L20"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":51,"name":"removeTransaction","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":24,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L24"}],"type":{"type":"reflection","declaration":{"id":52,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":24,"character":21,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L24"}],"signatures":[{"id":53,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove a transaction from the managed transactions."}]},"parameters":[{"id":54,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":55,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":56,"name":"hash","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":24,"character":34,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L24"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[56]}],"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":24,"character":32,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L24"}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":42,"name":"transactions","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The transactions being managed."}]},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":18,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L18"}],"type":{"type":"array","elementType":{"type":"reference","id":37,"typeArguments":[{"type":"reference","id":57,"name":"M"}],"name":"ManagedTransaction"}}}],"groups":[{"title":"Properties","children":[44,43,51,42]}],"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":16,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L16"}],"typeParameters":[{"id":57,"name":"M","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}]},{"id":64,"name":"UseAccountResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useAccount`"},{"kind":"text","text":"."}]},"children":[{"id":65,"name":"account","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The connected account object."}]},"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":15,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L15"}],"type":{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}},{"id":66,"name":"address","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of the connected account."}]},"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":17,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L17"}],"type":{"type":"intrinsic","name":"string"}},{"id":67,"name":"connector","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The connected connector."}]},"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":19,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L19"}],"type":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}},{"id":68,"name":"status","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The connection status."}]},"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":21,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L21"}],"type":{"type":"reference","id":63,"name":"AccountStatus"}}],"groups":[{"title":"Properties","children":[65,66,67,68]}],"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":13,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L13"}]},{"id":87,"name":"UseBlockResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useBlock`"},{"kind":"text","text":"."}]},"children":[{"id":88,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Block data."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":66,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L66"}],"type":{"type":"reference","name":"GetBlockResponse","qualifiedName":"GetBlockResponse","package":"starknet"}},{"id":91,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error fetching block."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":72,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L72"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":90,"name":"isError","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if error while loading data."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":70,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L70"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":89,"name":"isLoading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if loading block data."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":68,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L68"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[88,91,90,89]}],"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":64,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L64"}]},{"id":115,"name":"UseConnectorsResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useConnectors`"},{"kind":"text","text":"."}]},"children":[{"id":117,"name":"available","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"List of available connectors."}]},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":10,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L10"}],"type":{"type":"array","elementType":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}}},{"id":118,"name":"connect","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":12,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L12"}],"type":{"type":"reflection","declaration":{"id":119,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":12,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L12"}],"signatures":[{"id":120,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Connect the given connector."}]},"parameters":[{"id":121,"name":"conn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":116,"name":"connectors","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"List of all registered connectors."}]},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":8,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L8"}],"type":{"type":"array","elementType":{"type":"reference","id":283,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Connector"}}},{"id":122,"name":"disconnect","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":14,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L14"}],"type":{"type":"reflection","declaration":{"id":123,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":14,"character":14,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L14"}],"signatures":[{"id":124,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Disconnect the currently connected connector."}]},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":125,"name":"refresh","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":16,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L16"}],"type":{"type":"reflection","declaration":{"id":126,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":16,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L16"}],"signatures":[{"id":127,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Refresh the list of available connectors."}]},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[117,118,116,122,125]}],"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":6,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L6"}]},{"id":139,"name":"UseContractFactoryProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useContractFactory`"},{"kind":"text","text":"."}]},"children":[{"id":142,"name":"abi","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract abi."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":58,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L58"}],"type":{"type":"reference","name":"Abi","qualifiedName":"Abi","package":"starknet"}},{"id":143,"name":"account","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The account or provider used for deploying."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":60,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L60"}],"type":{"type":"reference","name":"AccountInterface","qualifiedName":"AccountInterface","package":"starknet"}},{"id":141,"name":"classHash","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The class hash"}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":56,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L56"}],"type":{"type":"intrinsic","name":"string"}},{"id":140,"name":"compiledContract","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The compiled contract."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":54,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L54"}],"type":{"type":"reference","name":"CompiledContract","qualifiedName":"CompiledContract","package":"starknet"}}],"groups":[{"title":"Properties","children":[142,143,141,140]}],"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":52,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L52"}]},{"id":144,"name":"UseContractFactoryResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useContractFactory`"},{"kind":"text","text":"."}]},"children":[{"id":145,"name":"contractFactory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract factory."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":66,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L66"}],"type":{"type":"reference","name":"ContractFactory","qualifiedName":"ContractFactory","package":"starknet"}}],"groups":[{"title":"Properties","children":[145]}],"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":64,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L64"}]},{"id":134,"name":"UseContractProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useContract`"},{"kind":"text","text":"."}]},"children":[{"id":135,"name":"abi","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract abi."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":8,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L8"}],"type":{"type":"reference","name":"Abi","qualifiedName":"Abi","package":"starknet"}},{"id":136,"name":"address","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract address."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":10,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L10"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[135,136]}],"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":6,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L6"}]},{"id":137,"name":"UseContractResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useContract`"},{"kind":"text","text":"."}]},"children":[{"id":138,"name":"contract","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract."}]},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":16,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L16"}],"type":{"type":"reference","name":"Contract","qualifiedName":"Contract","package":"starknet"}}],"groups":[{"title":"Properties","children":[138]}],"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":14,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L14"}]},{"id":149,"name":"UseDeployProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useDeploy`"},{"kind":"text","text":"."}]},"children":[{"id":152,"name":"addressSalt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Salt used when generating the address."}]},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":11,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L11"}],"type":{"type":"intrinsic","name":"any"}},{"id":151,"name":"constructorCalldata","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Calldata passed to the constructor."}]},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":9,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L9"}],"type":{"type":"reference","name":"RawCalldata","qualifiedName":"RawCalldata","package":"starknet"}},{"id":150,"name":"contractFactory","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract factory."}]},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":7,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L7"}],"type":{"type":"reference","name":"ContractFactory","qualifiedName":"ContractFactory","package":"starknet"}}],"groups":[{"title":"Properties","children":[152,151,150]}],"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":5,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L5"}]},{"id":153,"name":"UseDeployResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useDeploy`"},{"kind":"text","text":"."}]},"children":[{"id":154,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The deployed contract."}]},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":17,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L17"}],"type":{"type":"reference","name":"Contract","qualifiedName":"Contract","package":"starknet"}},{"id":160,"name":"deploy","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":25,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L25"}],"type":{"type":"reflection","declaration":{"id":161,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":25,"character":10,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L25"}],"signatures":[{"id":162,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Send deploy transaction."}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"Contract","qualifiedName":"Contract","package":"starknet"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":156,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error while deploying."}]},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":21,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L21"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":155,"name":"loading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if deploying."}]},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":19,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L19"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":157,"name":"reset","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":23,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L23"}],"type":{"type":"reflection","declaration":{"id":158,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":23,"character":9,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L23"}],"signatures":[{"id":159,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset hook state."}]},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[154,160,156,155,157]}],"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":15,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L15"}]},{"id":217,"name":"UseNetworkResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useNetwork`"},{"kind":"text","text":"."}]},"children":[{"id":218,"name":"chain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The current chain."}]},"sources":[{"fileName":"packages/core/src/hooks/network.ts","line":8,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/network.ts#L8"}],"type":{"type":"reference","id":387,"name":"Chain"}}],"groups":[{"title":"Properties","children":[218]}],"sources":[{"fileName":"packages/core/src/hooks/network.ts","line":6,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/network.ts#L6"}]},{"id":222,"name":"UseSignTypedData","kind":256,"kindString":"Interface","flags":{},"children":[{"id":223,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":67,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L67"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":224,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":68,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L68"}],"type":{"type":"intrinsic","name":"string"}},{"id":225,"name":"loading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":69,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L69"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":229,"name":"reset","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":71,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L71"}],"type":{"type":"reflection","declaration":{"id":230,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":71,"character":9,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L71"}],"signatures":[{"id":231,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":226,"name":"signTypedData","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":70,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L70"}],"type":{"type":"reflection","declaration":{"id":227,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":70,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L70"}],"signatures":[{"id":228,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"Signature","qualifiedName":"Signature","package":"starknet"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}}],"groups":[{"title":"Properties","children":[223,224,225,229,226]}],"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":66,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L66"}]},{"id":96,"name":"UseStarknetCallOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Call options."}]},"children":[{"id":98,"name":"blockIdentifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Block identifier used when performing call."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":14,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L14"}],"type":{"type":"reference","name":"BlockNumber","qualifiedName":"BlockNumber","package":"starknet"}},{"id":97,"name":"watch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Refresh data at every block."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":12,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L12"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[98,97]}],"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":10,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L10"}]},{"id":99,"name":"UseStarknetCallProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useStarknetCall`"},{"kind":"text","text":"."}]},"children":[{"id":102,"name":"args","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Call arguments."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":24,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L24"}],"type":{"type":"reference","id":104,"name":"T"}},{"id":100,"name":"contract","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The target contract."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":20,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L20"}],"type":{"type":"reference","name":"ContractInterface","qualifiedName":"ContractInterface","package":"starknet"}},{"id":101,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The contract\'s method."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":22,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L22"}],"type":{"type":"intrinsic","name":"string"}},{"id":103,"name":"options","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Call options."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":26,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L26"}],"type":{"type":"reference","id":96,"name":"UseStarknetCallOptions"}}],"groups":[{"title":"Properties","children":[102,100,101,103]}],"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":18,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L18"}],"typeParameters":[{"id":104,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}]},{"id":105,"name":"UseStarknetCallResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useStarknetCall`"},{"kind":"text","text":"."}]},"children":[{"id":106,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Value returned from call."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":33,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L33"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":108,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error when performing call."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":37,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L37"}],"type":{"type":"intrinsic","name":"string"}},{"id":107,"name":"loading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True when performing call."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":35,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L35"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":109,"name":"refresh","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":39,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L39"}],"type":{"type":"reflection","declaration":{"id":110,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":39,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L39"}],"signatures":[{"id":111,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Manually trigger refresh of data."}]},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":112,"name":"refreshing","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True when performing call."}]},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":41,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L41"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[106,108,107,109,112]}],"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":30,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L30"}]},{"id":181,"name":"UseStarknetExecute","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useStarknetExecute`"}]},"children":[{"id":182,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Data returned from the execute call."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":27,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L27"}],"type":{"type":"intrinsic","name":"string"}},{"id":184,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error while running execute."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":31,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L31"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":188,"name":"execute","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":35,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L35"}],"type":{"type":"reflection","declaration":{"id":189,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":35,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L35"}],"signatures":[{"id":190,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Execute the calls."}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"InvokeFunctionResponse","qualifiedName":"InvokeFunctionResponse","package":"starknet"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":183,"name":"loading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if the execute call is being executed."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":29,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L29"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":185,"name":"reset","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":33,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L33"}],"type":{"type":"reflection","declaration":{"id":186,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":33,"character":9,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L33"}],"signatures":[{"id":187,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset the hook state."}]},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[182,184,188,183,185]}],"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":25,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L25"}]},{"id":178,"name":"UseStarknetExecuteArgs","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useStarknetExecute`"},{"kind":"text","text":"."}]},"children":[{"id":179,"name":"calls","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of smart contract calls to execute."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":18,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L18"}],"type":{"type":"union","types":[{"type":"reference","id":174,"name":"Call"},{"type":"array","elementType":{"type":"reference","id":174,"name":"Call"}}]}},{"id":180,"name":"metadata","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Metadata associated with the transaction."}]},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":21,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L21"}],"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Properties","children":[179,180]}],"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":16,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L16"}]},{"id":195,"name":"UseStarknetInvokeArgs","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useStarknetInvoke`"},{"kind":"text","text":"."}]},"children":[{"id":196,"name":"contract","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The target contract."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":7,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L7"}],"type":{"type":"reference","name":"ContractInterface","qualifiedName":"ContractInterface","package":"starknet"}},{"id":197,"name":"method","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The method name."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":9,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L9"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[196,197]}],"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":5,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L5"}]},{"id":203,"name":"UseStarknetInvokeResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useStarknetInvoke`"}]},"children":[{"id":204,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Data returned from the invoke call."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":26,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L26"}],"type":{"type":"reference","name":"InvokeFunctionResponse","qualifiedName":"InvokeFunctionResponse","package":"starknet"}},{"id":206,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error while running invoke."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":30,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L30"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":210,"name":"invoke","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":34,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L34"}],"type":{"type":"reflection","declaration":{"id":211,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":34,"character":10,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L34"}],"signatures":[{"id":212,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Invoke the contract method."}]},"parameters":[{"id":213,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":198,"typeArguments":[{"type":"reference","id":214,"name":"T"}],"name":"InvokeArgs"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"InvokeFunctionResponse","qualifiedName":"InvokeFunctionResponse","package":"starknet"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":205,"name":"loading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if the execute call is being invoked."}]},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":28,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L28"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":207,"name":"reset","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":32,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L32"}],"type":{"type":"reflection","declaration":{"id":208,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":32,"character":9,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L32"}],"signatures":[{"id":209,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset the hook state."}]},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[204,206,210,205,207]}],"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":24,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L24"}],"typeParameters":[{"id":214,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}]},{"id":238,"name":"UseTransactionProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for the "},{"kind":"code","text":"`useTransaction`"},{"kind":"text","text":" hook."}]},"children":[{"id":239,"name":"hash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The transaction hash."}]},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":8,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L8"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[239]}],"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":6,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L6"}]},{"id":249,"name":"UseTransactionReceiptProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for the "},{"kind":"code","text":"`useTransactionReceipt`"},{"kind":"text","text":" hook."}]},"children":[{"id":250,"name":"hash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The transaction hash."}]},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":10,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L10"}],"type":{"type":"intrinsic","name":"string"}},{"id":252,"name":"onAcceptedOnL1","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":17,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L17"}],"type":{"type":"reflection","declaration":{"id":253,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":17,"character":19,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L17"}],"signatures":[{"id":254,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@optional","content":[{"kind":"text","text":"Callback function that will handle the transaction given the status \\"ACCEPTED_ON_L1\\"."}]}]},"parameters":[{"id":255,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":256,"name":"onAcceptedOnL2","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":22,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L22"}],"type":{"type":"reflection","declaration":{"id":257,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":22,"character":19,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L22"}],"signatures":[{"id":258,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@optional","content":[{"kind":"text","text":"Callback function that will handle the transaction given the status \\"ACCEPTED_ON_L2\\"."}]}]},"parameters":[{"id":259,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":272,"name":"onNotReceived","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":42,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L42"}],"type":{"type":"reflection","declaration":{"id":273,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":42,"character":18,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L42"}],"signatures":[{"id":274,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@optional","content":[{"kind":"text","text":"Callback function that will handle the transaction given the status \\"NOT_RECEIVED\\"."}]}]},"parameters":[{"id":275,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":260,"name":"onPending","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":27,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L27"}],"type":{"type":"reflection","declaration":{"id":261,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":27,"character":14,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L27"}],"signatures":[{"id":262,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@optional","content":[{"kind":"text","text":"Callback function that will handle the transaction given the status \\"PENDING\\"."}]}]},"parameters":[{"id":263,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":268,"name":"onReceived","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":37,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L37"}],"type":{"type":"reflection","declaration":{"id":269,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":37,"character":15,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L37"}],"signatures":[{"id":270,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@optional","content":[{"kind":"text","text":"Callback function that will handle the transaction given the status \\"RECEIVED\\"."}]}]},"parameters":[{"id":271,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":264,"name":"onRejected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":32,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L32"}],"type":{"type":"reflection","declaration":{"id":265,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":32,"character":15,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L32"}],"signatures":[{"id":266,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@optional","content":[{"kind":"text","text":"Callback function that will handle the transaction given the status \\"REJECTED\\"."}]}]},"parameters":[{"id":267,"name":"transaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":251,"name":"watch","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Refresh data at every block."}]},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":12,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L12"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[250,252,256,272,260,268,264,251]}],"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":8,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L8"}]},{"id":276,"name":"UseTransactionReceiptResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useTransactionReceipt`"},{"kind":"text","text":"."}]},"children":[{"id":277,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The transaction receipt data."}]},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":48,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L48"}],"type":{"type":"reference","name":"GetTransactionReceiptResponse","qualifiedName":"GetTransactionReceiptResponse","package":"starknet"}},{"id":279,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error while fetching the transaction receipt."}]},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":52,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L52"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":278,"name":"loading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if fetching data."}]},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":50,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L50"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":280,"name":"refresh","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":54,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L54"}],"type":{"type":"reflection","declaration":{"id":281,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":54,"character":11,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L54"}],"signatures":[{"id":282,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Manually trigger refresh of data."}]},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[277,279,278,280]}],"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":46,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L46"}]},{"id":240,"name":"UseTransactionResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Value returned from "},{"kind":"code","text":"`useTransaction`"},{"kind":"text","text":"."}]},"children":[{"id":241,"name":"data","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The transaction data."}]},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":14,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L14"}],"type":{"type":"reference","name":"GetTransactionResponse","qualifiedName":"GetTransactionResponse","package":"starknet"}},{"id":243,"name":"error","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Error while fetching the transaction."}]},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":18,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L18"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":242,"name":"loading","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"True if fetching data."}]},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":16,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L16"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[241,243,242]}],"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":12,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L12"}]},{"id":244,"name":"UseTransactionsProps","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for the "},{"kind":"code","text":"`useTransactions`"},{"kind":"text","text":" hook."}]},"children":[{"id":245,"name":"hashes","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The transactions hashes."}]},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":56,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L56"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[245]}],"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":54,"character":17,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L54"}]},{"id":63,"name":"AccountStatus","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Account connection status."}]},"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":8,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L8"}],"type":{"type":"union","types":[{"type":"literal","value":"connected"},{"type":"literal","value":"disconnected"}]}},{"id":383,"name":"BlockExplorer","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/network.ts","line":4,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L4"}],"type":{"type":"reflection","declaration":{"id":384,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":385,"name":"name","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/network.ts","line":4,"character":30,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L4"}],"type":{"type":"intrinsic","name":"string"}},{"id":386,"name":"url","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/network.ts","line":4,"character":44,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L4"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[385,386]}],"sources":[{"fileName":"packages/core/src/network.ts","line":4,"character":28,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L4"}]}}},{"id":382,"name":"BlockExplorerName","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/network.ts","line":3,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L3"}],"type":{"type":"literal","value":"voyager"}},{"id":387,"name":"Chain","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Information about a StarkNet network."}]},"sources":[{"fileName":"packages/core/src/network.ts","line":7,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L7"}],"type":{"type":"reflection","declaration":{"id":388,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":391,"name":"blockExplorer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Block explorer."}]},"sources":[{"fileName":"packages/core/src/network.ts","line":13,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L13"}],"type":{"type":"reference","id":383,"name":"BlockExplorer"}},{"id":389,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Chain ID."}]},"sources":[{"fileName":"packages/core/src/network.ts","line":9,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L9"}],"type":{"type":"intrinsic","name":"string"}},{"id":390,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable name."}]},"sources":[{"fileName":"packages/core/src/network.ts","line":11,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L11"}],"type":{"type":"intrinsic","name":"string"}},{"id":392,"name":"testnet","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Flag for test networks."}]},"sources":[{"fileName":"packages/core/src/network.ts","line":15,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L15"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[391,389,390,392]}],"sources":[{"fileName":"packages/core/src/network.ts","line":7,"character":20,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L7"}]}}},{"id":374,"name":"EventHandler","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":22,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L22"}],"type":{"type":"reflection","declaration":{"id":375,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":22,"character":27,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L22"}],"signatures":[{"id":376,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Wallet event handler."}]},"parameters":[{"id":377,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":378,"name":"EventType","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Wallet event type."}]},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":18,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L18"}],"type":{"type":"union","types":[{"type":"literal","value":"accountsChanged"},{"type":"literal","value":"networkChanged"}]}},{"id":4,"name":"StarknetConfigProps","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`StarknetConfig`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/providers/index.tsx","line":9,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/index.tsx#L9"}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"StarknetProviderProps"},{"type":"literal","value":"children"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":5,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6,"name":"children","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/providers/index.tsx","line":10,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/index.tsx#L10"}],"type":{"type":"reference","name":"React.ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}}],"groups":[{"title":"Properties","children":[6]}],"sources":[{"fileName":"packages/core/src/providers/index.tsx","line":9,"character":76,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/index.tsx#L9"}]}}]}},{"id":80,"name":"UseBlockProps","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Arguments for "},{"kind":"code","text":"`useBlock`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":56,"character":12,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L56"}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","id":78,"name":"FetchBlockArgs"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"},{"type":"reflection","declaration":{"id":81,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":83,"name":"onSuccess","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":60,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L60"}],"type":{"type":"reflection","declaration":{"id":84,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":60,"character":14,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L60"}],"signatures":[{"id":85,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Callback fired every time a new block is fetched."}]},"parameters":[{"id":86,"name":"block","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GetBlockResponse","qualifiedName":"GetBlockResponse","package":"starknet"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":82,"name":"refetchInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"How often to refresh the data."}]},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":58,"character":2,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L58"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":false}]}}],"groups":[{"title":"Properties","children":[83,82]}],"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":56,"character":54,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L56"}]}}]}},{"id":58,"name":"TransactionManagerContext","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Transaction manager context."}]},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":28,"character":13,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L28"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":41,"typeArguments":[{"type":"intrinsic","name":"object"}],"name":"TransactionManagerState"}],"name":"Context","qualifiedName":"React.Context","package":"@types/react"},"defaultValue":"..."},{"id":1,"name":"StarknetConfig","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/providers/index.tsx","line":14,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/index.tsx#L14"}],"signatures":[{"id":2,"name":"StarknetConfig","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Root component that manages the state of all starknet-react hooks."}]},"parameters":[{"id":3,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4,"name":"StarknetConfigProps"}}],"type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"}}]},{"id":9,"name":"StarknetProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":243,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L243"}],"signatures":[{"id":10,"name":"StarknetProvider","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Root StarkNet context provider."}]},"parameters":[{"id":11,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":24,"name":"StarknetProviderProps"}}],"type":{"type":"reference","name":"JSX.Element","qualifiedName":"global.JSX.Element","package":"@types/react"}}]},{"id":33,"name":"TransactionManagerProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":83,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L83"}],"signatures":[{"id":34,"name":"TransactionManagerProvider","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Context provider for "},{"kind":"code","text":"`useTransactionManager`"},{"kind":"text","text":"."}]},"typeParameter":[{"id":35,"name":"M","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":36,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":59,"name":"TransactionManagerProviderProps"}}],"type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"}}]},{"id":379,"name":"chainById","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/network.ts","line":19,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/network.ts#L19"}],"signatures":[{"id":380,"name":"chainById","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a chain information from its id."}]},"parameters":[{"id":381,"name":"chainId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"StarknetChainId","qualifiedName":"StarknetChainId","package":"starknet"}}],"type":{"type":"union","types":[{"type":"reference","id":387,"name":"Chain"},{"type":"intrinsic","name":"undefined"}]}}]},{"id":342,"name":"getInstalledInjectedConnectors","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/connectors/injected.ts","line":163,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/connectors/injected.ts#L163"}],"signatures":[{"id":343,"name":"getInstalledInjectedConnectors","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns all injected connectors installed by the user."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"Because of how wallets are injected in the window context, this\\nfunction is not guaranteed to return the actual installed wallets."}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Don\'t use this function for new applications, manually specify the supported\\nwallets instead."}]}]},"type":{"type":"array","elementType":{"type":"reference","id":312,"name":"InjectedConnector"}}}]},{"id":61,"name":"useAccount","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/account.ts","line":44,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/account.ts#L44"}],"signatures":[{"id":62,"name":"useAccount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook for accessing the account and its connection status."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook is used to access the "},{"kind":"code","text":"`AccountInterface`"},{"kind":"text","text":" object provided by the\\ncurrently connected wallet."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to display the wallet connection status and\\nthe currently connected wallet address.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { account, address, status } = useAccount()\\n\\n  if (status === \'disconnected\') return <p>Disconnected</p>\\n  return <p>Account: {address}</p>\\n}\\n```"}]}]},"type":{"type":"reference","id":64,"name":"UseAccountResult"}}]},{"id":71,"name":"useBlock","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":115,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L115"}],"signatures":[{"id":72,"name":"useBlock","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook for fetching a block."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"Specify which block to fetch with the "},{"kind":"code","text":"`blockIdentifier`"},{"kind":"text","text":" argument.\\nControl if and how often data is refreshed with "},{"kind":"code","text":"`refetchInterval`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the latest block only once.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { data, isLoading, isError } = useBlock({\\n    refetchInterval: false,\\n    blockIdentifier: \'latest\'\\n  })\\n\\n  if (isLoading) return <span>Loading...</span>\\n  if (isError) return <span>Error...</span>\\n  return <span>Hash: {data.block_hash}</span>\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the pending block every 3 seconds.\\nUse your browser network monitor to verify that the hook is refetching the\\ndata.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { data, isLoading, isError } = useBlock({\\n    refetchInterval: 3000,\\n    blockIdentifier: \'pending\'\\n  })\\n\\n  if (isLoading) return <span>Loading...</span>\\n  if (isError) return <span>Error...</span>\\n  return <span>Hash: {data.block_hash}</span>\\n}\\n```"}]}]},"parameters":[{"id":73,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":80,"name":"UseBlockProps"},"defaultValue":"{}"}],"type":{"type":"reference","id":87,"name":"UseBlockResult"}}]},{"id":113,"name":"useConnectors","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/connectors.ts","line":77,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/connectors.ts#L77"}],"signatures":[{"id":114,"name":"useConnectors","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to work with connectors."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook is the recommended way to interact with the connectors.\\n\\nNotice that the "},{"kind":"code","text":"`available`"},{"kind":"text","text":" connectors are computed as soon as the hook is\\nrendered, which could happen _before_ the browser wallets had the opportunity\\nto inject themselves in the page.\\n\\nThe best practice is to periodically "},{"kind":"code","text":"`refresh`"},{"kind":"text","text":" the available connectors."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows all registered connectors and connects\\nto the specified one.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { connect, connectors } = useConnectors()\\n\\n  return (\\n    <ul>\\n      {connectors.map((connector) => (\\n        <li key={connector.id()}>\\n          <button onClick={() => connect(connector)}>\\n            Connect {connector.id()}\\n          </button>\\n        </li>\\n      ))}\\n    </ul>\\n  )\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to refresh the available connectors\\nevery 5 seconds.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { available, refresh } = useConnectors()\\n\\n  useEffect(() => {\\n    const interval = setInterval(refresh, 5000)\\n    return () => clearInterval(interval)\\n  }, [refresh])\\n\\n  return (\\n    <ul>\\n      {available.map((connector) => (\\n        <li key={connector.id()}>\\n         {connector.id()}\\n        </li>\\n      ))}\\n    </ul>\\n  )\\n}\\n```"}]}]},"type":{"type":"reference","id":115,"name":"UseConnectorsResult"}}]},{"id":128,"name":"useContract","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":39,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L39"}],"signatures":[{"id":129,"name":"useContract","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to bind a "},{"kind":"code","text":"`Contract`"},{"kind":"text","text":" instance."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"The returned contract is a starknet.js "},{"kind":"code","text":"`Contract`"},{"kind":"text","text":" object."}]},{"tag":"@example","content":[{"kind":"text","text":"This example creates a new contract from its address and abi.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { contract } = useContract({\\n    address: ethAddress,\\n    abi: compiledErc20.abi\\n  })\\n\\n  return <span>{contract.address}</span>\\n}\\n```"}]}]},"parameters":[{"id":130,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":134,"name":"UseContractProps"}}],"type":{"type":"reference","id":137,"name":"UseContractResult"}}]},{"id":131,"name":"useContractFactory","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/contract.ts","line":94,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/contract.ts#L94"}],"signatures":[{"id":132,"name":"useContractFactory","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to create a "},{"kind":"code","text":"`ContractFactory`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"The returned contract factory is a starknet.js "},{"kind":"code","text":"`ContractFactory`"},{"kind":"text","text":" object.\\n\\nThis hook works well with "},{"kind":"code","text":"`useDeploy`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to create a contract factory.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { account } = useAccount()\\n  const { contractFactory } = useContractFactory({\\n    compiledContract: compiledErc20,\\n    classHash:\\n    abi: compiledErc20.abi,\\n    account: account\\n  })\\n\\n  return <p>Nothing to see here...</p>\\n}\\n```"}]}]},"parameters":[{"id":133,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":139,"name":"UseContractFactoryProps"}}],"type":{"type":"reference","id":144,"name":"UseContractFactoryResult"}}]},{"id":146,"name":"useDeploy","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/deploy.ts","line":74,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/deploy.ts#L74"}],"signatures":[{"id":147,"name":"useDeploy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to deploy a StarkNet contract."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"You should check that "},{"kind":"code","text":"`contractFactory`"},{"kind":"text","text":" is defined before calling "},{"kind":"code","text":"`deploy`"},{"kind":"text","text":",\\nor the call will fail.\\n\\nThe transaction is submitted from the provider passed to the contract factory,\\nso ensure to use the currently connected account."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to deploy a contract from the currently connected account.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { account, address } = useAccount()\\n  const { contractFactory } = useContractFactory({\\n    compiledContract: compiledErc20,\\n    providerOrAccount: account\\n  })\\n\\n  // notice constructor args are felt encoded\\n  const constructorCalldata = useMemo(() => [\\n    encodeShortString(\'StarkNet React\'), // name\\n    encodeShortString(\'SNR\'), // symbol\\n    18, // decimals\\n    10000, // initial_supply.low\\n    0, // initial_supply.high\\n    address, // recipient\\n    address, // owner\\n  ], [address])\\n\\n  const { deploy, error } = useDeploy({\\n    contractFactory,\\n    constructorCalldata\\n  })\\n\\n  return (\\n    <>\\n      <button onClick={deploy}>Deploy contract</button>\\n      {error && <p>Error: {JSON.stringify(error)}</p>}\\n    </>\\n  )\\n}\\n```"}]}]},"parameters":[{"id":148,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":149,"name":"UseDeployProps"}}],"type":{"type":"reference","id":153,"name":"UseDeployResult"}}]},{"id":215,"name":"useNetwork","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/network.ts","line":28,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/network.ts#L28"}],"signatures":[{"id":216,"name":"useNetwork","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook for accessing the current connected chain."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"The network object contains information about the\\nnetwork, including block explorers."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to display the current network name.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { chain } = useNetwork()\\n\\n  return <span>{chain.name}</span>\\n}"}]}]},"type":{"type":"reference","id":217,"name":"UseNetworkResult"}}]},{"id":219,"name":"useSignTypedData","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/sign.ts","line":120,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/sign.ts#L120"}],"signatures":[{"id":220,"name":"useSignTypedData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to sign typed data."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook signs a JSON object for off-chain use with the current\\nwallet private key."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to sign some data.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { data, signTypedData } = useSignTypedData(message)\\n  const message = {\\n    types: {\\n      Person: [\\n        { name: \'name\', type: \'felt\' }\\n      ],\\n      Mail: [\\n        { name: \'from\', type: \'Person\' }\\n      ]\\n    },\\n    primaryType: \'Mail\',\\n    domain: {\\n      name: \'StarkNet Mail\',\\n      version: \'1\',\\n      chainId: 1,\\n    },\\n    message: {\\n      from: {\\n        name: \'Alice\'\\n      }\\n    }\\n  }\\n\\n  return (\\n    <>\\n      <p>\\n        <button onClick={signTypedData}>Sign</button>\\n      </p>\\n      {data && <p>Signed: {JSON.stringify(data)}</p>}\\n    </>\\n  )\\n}\\n```"}]}]},"parameters":[{"id":221,"name":"typedData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TypedData","qualifiedName":"TypedData","package":"starknet"}}],"type":{"type":"reference","id":222,"name":"UseSignTypedData"}}]},{"id":7,"name":"useStarknet","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/providers/starknet.tsx","line":71,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/starknet.tsx#L71"}],"signatures":[{"id":8,"name":"useStarknet","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the current StarkNet context state."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook should be used sparingly and will be deprecated.\\n\\nUse the following hooks:\\n\\n - "},{"kind":"code","text":"`account`"},{"kind":"text","text":": "},{"kind":"code","text":"`useAccount`"},{"kind":"text","text":"\\n - "},{"kind":"code","text":"`connect`"},{"kind":"text","text":", "},{"kind":"code","text":"`disconnect`"},{"kind":"text","text":", "},{"kind":"code","text":"`connectors`"},{"kind":"text","text":": "},{"kind":"code","text":"`useConnectors`"}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to access the StarkNet provider.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { library } = useStarknet()\\n\\n  if (!library.provider) return <span>Account URL: {library.baseUrl}</span>\\n  return <span>Provider URL: {library.provider.baseUrl}</span>\\n}\\n```"}]}]},"type":{"type":"reference","id":12,"name":"StarknetState"}}]},{"id":69,"name":"useStarknetBlock","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":38,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/block.ts#L38"}],"signatures":[{"id":70,"name":"useStarknetBlock","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook for fetching a block."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook fetches the "},{"kind":"code","text":"`latest`"},{"kind":"text","text":" block using the default provider.\\nBlock data is continuously refreshed in the background."}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"inline-tag","tag":"@link","text":"useBlock","target":71},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the latest block.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { data, loading, error } = useStarknetBlock()\\n\\n  if (loading) return <span>Loading...</span>\\n  if (error) return <span>Error...</span>\\n  return <span>Hash: {data.block_hash}</span>\\n}\\n```"}]}]},"type":{"type":"reference","id":74,"name":"StarkNetBlockResult"}}]},{"id":92,"name":"useStarknetCall","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":82,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/call.ts#L82"}],"signatures":[{"id":93,"name":"useStarknetCall","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to perform a read-only contract call."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"The hook only performs a call if the target "},{"kind":"code","text":"`contract`"},{"kind":"text","text":",\\n"},{"kind":"code","text":"`method`"},{"kind":"text","text":", and "},{"kind":"code","text":"`args`"},{"kind":"text","text":" are not undefined."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the user ERC-20 balance.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { contract } = useContract({\\n    address: ethAddress,\\n    abi: compiledErc20.abi\\n  })\\n  const { address } = useAccount()\\n  const { data, loading, error, refresh } = useStarknetCall({\\n    contract,\\n    method: \'balanceOf\',\\n    args: [address],\\n    options: {\\n      watch: false\\n    }\\n  })\\n\\n  if (loading) return <span>Loading...</span>\\n  if (error) return <span>Error: {error}</span>\\n\\n  return (\\n    <div>\\n      <button onClick={refresh}>Refresh</button>\\n      <p>Balance: {JSON.stringify(data)}</p>\\n    </div>\\n  )\\n}\\n```"}]}]},"typeParameter":[{"id":94,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":95,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":99,"typeArguments":[{"type":"reference","id":94,"name":"T"}],"name":"UseStarknetCallProps"}}],"type":{"type":"reference","id":105,"name":"UseStarknetCallResult"}}]},{"id":163,"name":"useStarknetExecute","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":88,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L88"}],"signatures":[{"id":164,"name":"useStarknetExecute","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to perform a StarkNet multicall."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"Multicalls are used to submit multiple transactions in a single\\ncall to improve user experience."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to dynamically add transactions to the multicall.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { address } = useAccount()\\n  const [count, setCount] = useState(0)\\n\\n  const calls = useMemo(() => {\\n    const tx = {\\n      contractAddress: ethAddress,\\n      entrypoint: \'transfer\',\\n      calldata: [address, 1, 0]\\n    }\\n    return Array(count).fill(tx)\\n  }, [address, count])\\n\\n  const { execute } = useStarknetExecute({ calls })\\n\\n  const inc = useCallback(\\n    () => setCount(c => c + 1),\\n    [setCount]\\n  )\\n  const dec = useCallback(\\n    () => setCount(c => Math.max(c - 1, 0)),\\n    [setCount]\\n  )\\n\\n  return (\\n    <>\\n      <p>Sending {count} transactions</p>\\n      <p>\\n        <button onClick={dec}>Decrement</button>\\n        <button onClick={inc}>Increment</button>\\n      </p>\\n      <p>\\n        <button onClick={execute}>Execute</button>\\n      </p>\\n    </>\\n  )\\n}\\n```"}]}]},"parameters":[{"id":165,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":178,"name":"UseStarknetExecuteArgs"}}],"type":{"type":"reflection","declaration":{"id":166,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":167,"name":"data","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":95,"character":4,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L95"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"InvokeFunctionResponse","qualifiedName":"InvokeFunctionResponse","package":"starknet"}]}},{"id":169,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":97,"character":4,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L97"}],"type":{"type":"intrinsic","name":"unknown"},"defaultValue":"..."},{"id":173,"name":"execute","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":99,"character":4,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L99"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"InvokeFunctionResponse","qualifiedName":"InvokeFunctionResponse","package":"starknet"},{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"void"},{"type":"intrinsic","name":"unknown"}],"name":"UseMutateAsyncFunction","qualifiedName":"UseMutateAsyncFunction","package":"@tanstack/react-query"},"defaultValue":"mutateAsync"},{"id":168,"name":"loading","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":96,"character":4,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L96"}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"isLoading"},{"id":170,"name":"reset","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":98,"character":4,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L98"}],"type":{"type":"reflection","declaration":{"id":171,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/.pnpm/@tanstack+query-core@4.3.4/node_modules/@tanstack/query-core/build/lib/types.d.ts","line":363,"character":11}],"signatures":[{"id":172,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[167,169,173,168,170]}],"sources":[{"fileName":"packages/core/src/hooks/execute.ts","line":94,"character":9,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/execute.ts#L94"}]}}}]},{"id":191,"name":"useStarknetInvoke","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/invoke.ts","line":70,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/invoke.ts#L70"}],"signatures":[{"id":192,"name":"useStarknetInvoke","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to invoke a smart contract method."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook calls the "},{"kind":"code","text":"`Contract.invoke`"},{"kind":"text","text":" method under the hood.\\nArguments should be encoded according to the starknet.js version\\nyou\'re using."}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"inline-tag","tag":"@link","text":"useStarknetExecute","target":163},{"kind":"text","text":" instead."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to transfer some ETH.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { address } = useAccount()\\n  const { contract } = useContract({\\n    abi: compiledErc20.abi,\\n    address: ethAddress,\\n  })\\n  const { invoke } = useStarknetInvoke({\\n    contract,\\n    method: \'transfer\',\\n  })\\n\\n  return (\\n    <button onClick={() => invoke({ args: [address, [1, 0]] })}>\\n      Invoke\\n    </button>\\n  )\\n}\\n```"}]}]},"typeParameter":[{"id":193,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":194,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":195,"name":"UseStarknetInvokeArgs"}}],"type":{"type":"reference","id":203,"typeArguments":[{"type":"reference","id":193,"name":"T"}],"name":"UseStarknetInvokeResult"}}]},{"id":232,"name":"useTransaction","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":41,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L41"}],"signatures":[{"id":233,"name":"useTransaction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to fetch a single transaction."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook keeps a cache of transactions by chain and transaction hash\\nso that you can use the hook freely in your application without worrying\\nabout sending duplicate network requests."}]},{"tag":"@example","content":[{"kind":"text","text":"This hook shows how to fetch a transaction.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { data, loading, error } = useTransaction({ hash: txHash })\\n\\n  if (loading) return <span>Loading...</span>\\n  if (error) return <span>Error: {JSON.stringify(error)}</span>\\n  return <span>{data.transaction_hash}</span>\\n}"}]}]},"parameters":[{"id":234,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":238,"name":"UseTransactionProps"}}],"type":{"type":"reference","id":240,"name":"UseTransactionResult"}}]},{"id":30,"name":"useTransactionManager","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":68,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L68"}],"signatures":[{"id":31,"name":"useTransactionManager","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to manage transaction across different components."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook only manages the hashes of the transactions, use the\\n"},{"kind":"code","text":"`useTransactions`"},{"kind":"text","text":" hook to fetch the state of the transactions."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the state of tracked transactions\\nand how to add new transactions to the manager.\\n\\nNotice that the transaction manager only accepts the same transaction once.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { hashes, addTransaction } = useTransactionManager()\\n  const transactions = useTransactions({ hashes })\\n\\n  return (\\n    <>\\n      <button onClick={() => addTransaction({ hash: txHash, metadata: { test: true } })}>\\n        Add transaction\\n      </button>\\n      <ul>\\n        {transactions.map(({ data }, i) => (\\n          <li key={i}>{data && data.transaction_hash}</li>\\n        ))}\\n      </ul>\\n    </>\\n  )\\n}\\n```"}]}]},"typeParameter":[{"id":32,"name":"M","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","id":41,"typeArguments":[{"type":"reference","id":32,"name":"M"}],"name":"TransactionManagerState"}}]},{"id":246,"name":"useTransactionReceipt","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":115,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/receipt.ts#L115"}],"signatures":[{"id":247,"name":"useTransactionReceipt","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to fetch a single transaction receipt."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook keeps a cache of receipts by chain and transaction hash\\nso that you can use the hook freely in your application without worrying\\nabout sending duplicate network requests.\\n\\nIf you need to refresh the transaction receipt data, set "},{"kind":"code","text":"`watch: true`"},{"kind":"text","text":" in\\nthe props. The hook will periodically refresh the transaction data in the\\nbackground."}]},{"tag":"@example","content":[{"kind":"text","text":"This hook shows how to fetch a transaction receipt.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { data, loading, error } = useTransactionReceipt({ hash: txHash })\\n\\n  if (loading) return <span>Loading...</span>\\n  if (error) return <span>Error: {JSON.stringify(error)}</span>\\n  return <span>{data.status}</span>\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to submit a transaction and load its status.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const { address } = useAccount()\\n  const [hash, setHash] = useState(undefined)\\n\\n  const { data, loading, error } = useTransactionReceipt({ hash, watch: true })\\n\\n  const { execute } = useStarknetExecute({\\n    calls: [{\\n      contractAddress: ethAddress,\\n      entrypoint: \'transfer\',\\n      calldata: [address, 1, 0]\\n    }]\\n  })\\n\\n  const handleClick = () => {\\n    execute().then(tx => setHash(tx.transaction_hash))\\n  }\\n\\n  return (\\n    <div>\\n      <button onClick={handleClick}>Submit tx</button>\\n      <div>Hash: {hash}</div>\\n      {loading && <div>Loading...</div>}\\n      {error && <div>Error: {JSON.stringify(error)}</div>}\\n      {data && <div>Status: {data.status}</div>}\\n    </div>\\n  )\\n}\\n```"}]}]},"parameters":[{"id":248,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":249,"name":"UseTransactionReceiptProps"}}],"type":{"type":"reference","id":276,"name":"UseTransactionReceiptResult"}}]},{"id":235,"name":"useTransactions","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/transaction.ts","line":87,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/hooks/transaction.ts#L87"}],"signatures":[{"id":236,"name":"useTransactions","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to fetch a list of transactions in parallel."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook fetches a dynamic list of transactions without\\nviolating the rules of hooks."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch a list of transactions.\\n"},{"kind":"code","text":"```tsx\\nfunction Component() {\\n  const results = useTransactions({\\n    hashes: [txHash, txHash2]\\n  })\\n\\n  return (\\n    <ul>\\n      {results.map(({ data }, i) => (\\n        <li key={i}>\\n        {data ? data.transaction_hash : \'Loading...\'}\\n        </li>\\n      ))}\\n    </ul>\\n  )\\n}\\n```"}]}]},"parameters":[{"id":237,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":244,"name":"UseTransactionsProps"}}],"type":{"type":"array","elementType":{"type":"reference","id":240,"name":"UseTransactionResult"}}}]}]}');function n(e){var t,a,r=null===(t=e.signatures[0])||void 0===t?void 0:null===(a=t.comment)||void 0===a?void 0:a.blockTags;if(r)return r.find(function(e){return"@deprecated"===e.tag})}function s(){return r.pI.filter(function(e){return"Function"===e.kindString&&e.name.startsWith("use")})}}}]);