{"pageProps":{"hook":{"id":30,"name":"useTransactionManager","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/providers/transaction.tsx","line":68,"character":16,"url":"https://github.com/apibara/starknet-react/blob/2a1599e/packages/core/src/providers/transaction.tsx#L68"}],"signatures":[{"id":31,"name":"useTransactionManager","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to manage transaction across different components."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook only manages the hashes of the transactions, use the\n"},{"kind":"code","text":"`useTransactions`"},{"kind":"text","text":" hook to fetch the state of the transactions."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the state of tracked transactions\nand how to add new transactions to the manager.\n\nNotice that the transaction manager only accepts the same transaction once.\n"},{"kind":"code","text":"```tsx\nfunction Component() {\n  const { hashes, addTransaction } = useTransactionManager()\n  const transactions = useTransactions({ hashes })\n\n  return (\n    <>\n      <button onClick={() => addTransaction({ hash: txHash, metadata: { test: true } })}>\n        Add transaction\n      </button>\n      <ul>\n        {transactions.map(({ data }, i) => (\n          <li key={i}>{data && data.transaction_hash}</li>\n        ))}\n      </ul>\n    </>\n  )\n}\n```"}]}]},"typeParameter":[{"id":32,"name":"M","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","id":41,"typeArguments":[{"type":"reference","id":32,"name":"M"}],"name":"TransactionManagerState"}}]}},"__N_SSG":true}