{"pageProps":{"hook":{"id":92,"name":"useStarknetCall","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/call.ts","line":82,"character":16,"url":"https://github.com/apibara/starknet-react/blob/58de77c/packages/core/src/hooks/call.ts#L82"}],"signatures":[{"id":93,"name":"useStarknetCall","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to perform a read-only contract call."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"The hook only performs a call if the target "},{"kind":"code","text":"`contract`"},{"kind":"text","text":",\n"},{"kind":"code","text":"`method`"},{"kind":"text","text":", and "},{"kind":"code","text":"`args`"},{"kind":"text","text":" are not undefined."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the user ERC-20 balance.\n"},{"kind":"code","text":"```tsx\nfunction Component() {\n  const { contract } = useContract({\n    address: ethAddress,\n    abi: compiledErc20.abi\n  })\n  const { address } = useAccount()\n  const { data, loading, error, refresh } = useStarknetCall({\n    contract,\n    method: 'balanceOf',\n    args: [address],\n    options: {\n      watch: false\n    }\n  })\n\n  if (loading) return <span>Loading...</span>\n  if (error) return <span>Error: {error}</span>\n\n  return (\n    <div>\n      <button onClick={refresh}>Refresh</button>\n      <p>Balance: {JSON.stringify(data)}</p>\n    </div>\n  )\n}\n```"}]}]},"typeParameter":[{"id":94,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":95,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":99,"typeArguments":[{"type":"reference","id":94,"name":"T"}],"name":"UseStarknetCallProps"}}],"type":{"type":"reference","id":105,"name":"UseStarknetCallResult"}}]}},"__N_SSG":true}