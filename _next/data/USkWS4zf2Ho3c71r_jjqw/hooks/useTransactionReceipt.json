{"pageProps":{"hook":{"id":246,"name":"useTransactionReceipt","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/receipt.ts","line":115,"character":16,"url":"https://github.com/apibara/starknet-react/blob/58de77c/packages/core/src/hooks/receipt.ts#L115"}],"signatures":[{"id":247,"name":"useTransactionReceipt","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook to fetch a single transaction receipt."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"This hook keeps a cache of receipts by chain and transaction hash\nso that you can use the hook freely in your application without worrying\nabout sending duplicate network requests.\n\nIf you need to refresh the transaction receipt data, set "},{"kind":"code","text":"`watch: true`"},{"kind":"text","text":" in\nthe props. The hook will periodically refresh the transaction data in the\nbackground."}]},{"tag":"@example","content":[{"kind":"text","text":"This hook shows how to fetch a transaction receipt.\n"},{"kind":"code","text":"```tsx\nfunction Component() {\n  const { data, loading, error } = useTransactionReceipt({ hash: txHash })\n\n  if (loading) return <span>Loading...</span>\n  if (error) return <span>Error: {JSON.stringify(error)}</span>\n  return <span>{data.status}</span>\n}\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to submit a transaction and load its status.\n"},{"kind":"code","text":"```tsx\nfunction Component() {\n  const { address } = useAccount()\n  const [hash, setHash] = useState(undefined)\n\n  const { data, loading, error } = useTransactionReceipt({ hash, watch: true })\n\n  const { execute } = useStarknetExecute({\n    calls: [{\n      contractAddress: ethAddress,\n      entrypoint: 'transfer',\n      calldata: [address, 1, 0]\n    }]\n  })\n\n  const handleClick = () => {\n    execute().then(tx => setHash(tx.transaction_hash))\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Submit tx</button>\n      <div>Hash: {hash}</div>\n      {loading && <div>Loading...</div>}\n      {error && <div>Error: {JSON.stringify(error)}</div>}\n      {data && <div>Status: {data.status}</div>}\n    </div>\n  )\n}\n```"}]}]},"parameters":[{"id":248,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":249,"name":"UseTransactionReceiptProps"}}],"type":{"type":"reference","id":276,"name":"UseTransactionReceiptResult"}}]}},"__N_SSG":true}