{"pageProps":{"hook":{"id":75,"name":"useBlock","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/hooks/block.ts","line":123,"character":16,"url":"https://github.com/apibara/starknet-react/blob/839c361/packages/core/src/hooks/block.ts#L123"}],"signatures":[{"id":76,"name":"useBlock","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook for fetching a block."}],"blockTags":[{"tag":"@remarks","content":[{"kind":"text","text":"Specify which block to fetch with the "},{"kind":"code","text":"`blockIdentifier`"},{"kind":"text","text":" argument.\nControl if and how often data is refreshed with "},{"kind":"code","text":"`refetchInterval`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the latest block only once.\n"},{"kind":"code","text":"```tsx\nfunction Component() {\n  const { data, isLoading, isError } = useBlock({\n    refetchInterval: false,\n    blockIdentifier: 'latest'\n  })\n\n  if (isLoading) return <span>Loading...</span>\n  if (isError) return <span>Error...</span>\n  return <span>Hash: {data.block_hash}</span>\n}\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"This example shows how to fetch the pending block every 3 seconds.\nUse your browser network monitor to verify that the hook is refetching the\ndata.\n"},{"kind":"code","text":"```tsx\nfunction Component() {\n  const { data, isLoading, isError } = useBlock({\n    refetchInterval: 3000,\n    blockIdentifier: 'pending'\n  })\n\n  if (isLoading) return <span>Loading...</span>\n  if (isError) return <span>Error...</span>\n  return <span>Hash: {data.block_hash}</span>\n}\n```"}]}]},"parameters":[{"id":77,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":87,"name":"UseBlockArgs"},"defaultValue":"{}"}],"type":{"type":"reference","id":94,"name":"UseBlockResult"}}]}},"__N_SSG":true}